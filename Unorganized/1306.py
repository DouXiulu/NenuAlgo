"""
题目描述
给定一个由N个非负整数构成的序列，我们来定义一下序列的中位数，如果N是奇数，在对序列排序后，中位数就是最中间的那个数，即排序后，中位数的位置为(N+1)/2，这里序列的位置从1开始。如果N是偶数，则中位数为排序后中间两个数和的一半，即N/2和(N/2)+1处。但是需要注意的是原始序列可能是未排序的。
你的任务就是编程找出给定序列中的中位数。
输入
第一行只有一个整数N，表示序列的长度。接下来就是N个数，每个数占一行，序列的长度范围为1到250000。序列中的每个数都是不超过2^32 – 1（包括它）的正整数。
输出
输出中位数，保留小数点后一位。
样例输入 复制
4
3
6
4
5
样例输出 复制
4.5
"""


n = int(input())


lt = []
for _ in range(n):
    lt.append(int(input()))

lt.sort()

# print(lt)

length = len(lt)

if length % 2 == 0:
    print(f"{(lt[length//2-1]+lt[length//2])/2:.1f}")
else:
    print(f"{lt[length//2]:.1f}")