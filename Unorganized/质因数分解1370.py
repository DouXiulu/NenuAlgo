"""
题目描述
正整数 n（n>1）可以写成质数的乘积形式，称为整数的质因数分解。例如，12=2 * 2 * 3，18=2 * 3 * 3，11=11。设计一个算法求 n 这样分解后各个质因数出现的次数，采用 vector 向量存放结果。
输入
输入为一行，正整数n。
输出
输出每个质因数及其出现的次数，格式见输出样例。
样例输入 复制
12
样例输出 复制
2 2
3 1
"""

n = int(input())
d = {}
i = 2
while i*i <= n:
    while n % i == 0:
        d[i] = d.get(i,0) + 1
        n //= i
    i += 1
if n > 1:
    d[n] = 1
for key in sorted(d.keys()):
    print(f"{key} {d[key]}")